dofile("common.lua")
--simulator.setDateTime({year=2024, month=6, day=24, hour=20, min=0, sec=0, lock=true})

simulator.loadModel("rarebear.bin")
simulator.setSwitch(0, 2)
simulator.setAnalog(ANALOG_LAST_SLIDER, 70)

simulator.sleep(1) -- wait for checklist to load
simulator.screenshot("../assets/model-checklist-at_start.png")
simulator.pressKey(KEY_ENTER)
simulator.pressKey(KEY_MDL)
simulator.turnRotaryEncoder(10)
simulator.screenshot("../assets/model-icon-checklist.png")
simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(1)
simulator.screenshot("../assets/model-checklist.png")
simulator.turnRotaryEncoder(3)
simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(-3)
simulator.pressKey(KEY_ENTER)
simulator.screenshot("../assets/model-checklist-check_function.png")
simulator.pressKey(KEY_RTN)
simulator.turnRotaryEncoder(9)
-- simulator.screenshot("./screenshot5.png")
simulator.screenshot("../assets/model-checklist-switches.png")
simulator.pressKey(KEY_ENTER)
simulator.screenshot("../assets/model-checklist-switches-options.png")
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_ENTER)
-- simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(5)
simulator.pressKey(KEY_ENTER)
-- simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(6)
-- simulator.screenshot("./screenshot8.png")
simulator.turnRotaryEncoder(-4)
simulator.screenshot("../assets/model-checklist-function-switches.png")
simulator.pressKey(KEY_ENTER)
simulator.screenshot("../assets/model-checklist-function-switches-options.png")
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(6)
simulator.pressKey(KEY_ENTER)
simulator.turnRotaryEncoder(9)
simulator.pressKey(KEY_RTN)
simulator.turnRotaryEncoder(-6)
simulator.screenshot("../assets/model-checklist-pots.png")
simulator.turnRotaryEncoder(-1)
simulator.pressKey(KEY_ENTER)
simulator.screenshot("../assets/model-checklist-pots-options.png")
simulator.pressKey(KEY_RTN)
simulator.pressKey(KEY_RTN, 1)
